var searchData=
[
  ['data_5ffuse_905',['data_fuse',['../namespacebsn_1_1processor.html#aa656f0fa70585ebf07c09768dc62101e',1,'bsn::processor']]],
  ['dataaccess_906',['DataAccess',['../classDataAccess.html#a1d89301d9e42ee285f0c9d0e8f163eba',1,'DataAccess']]],
  ['datagenerator_907',['DataGenerator',['../classbsn_1_1generator_1_1DataGenerator.html#a1e1627c22143f5764f08c9847b3e2b76',1,'bsn::generator::DataGenerator::DataGenerator()'],['../classbsn_1_1generator_1_1DataGenerator.html#a007d1879a9d160396f4c5c043836567e',1,'bsn::generator::DataGenerator::DataGenerator(const Markov &amp;markov)'],['../classbsn_1_1generator_1_1DataGenerator.html#ad47458ef68863d2689c1b19c558a6c09',1,'bsn::generator::DataGenerator::DataGenerator(const DataGenerator &amp;obj)']]],
  ['datageneratortest_908',['DataGeneratorTest',['../classDataGeneratorTest.html#a65b6eedc9b42c33c8e6db3df687d14e0',1,'DataGeneratorTest']]],
  ['deactivate_909',['deactivate',['../classarch_1_1target__system_1_1Component.html#a7e504b0c12531376d3cca170a23b18e3',1,'arch::target_system::Component::deactivate()'],['../classAnalyzer_1_1Context.html#a5fe05e896f0042bc07f8a2bc5bd48658',1,'Analyzer.Context.deactivate()']]],
  ['delta_910',['Delta',['../classLepton_1_1Operation.html#a4ac6c5263da7b66e2a946e46808fe905',1,'Lepton::Operation']]],
  ['differentiate_911',['differentiate',['../classLepton_1_1Operation.html#a2b33708a88e4ca2bd747246e911adec3',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const =0'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1Operation.html#a2c81a70f7c72464485959e1a83df5a3b',1,'Lepton::Operation::differentiate(const std::vector&lt; ExpressionTreeNode &gt; &amp;children, const std::vector&lt; ExpressionTreeNode &gt; &amp;childDerivs, const std::string &amp;variable) const'],['../classLepton_1_1ParsedExpression.html#a0ed0e7e8c6ad3d593e90f911160a724a',1,'Lepton::ParsedExpression::differentiate()']]],
  ['divide_912',['Divide',['../classLepton_1_1Operation.html#a1f7cf7ac8eb41ec4a2ae44ab4f5ad9af',1,'Lepton::Operation']]]
];
